/**
 * Definition for singly-linked list.
 * class ListNode {
 *     int val;
 *     ListNode next;
 *     ListNode(int x) {
 *         val = x;
 *         next = null;
 *     }
 * }
 */
public class Solution {
    public boolean hasCycle(ListNode head) {
        if(head == null || head.next == null) {
            return false;
        }
        
        ListNode flag1 = head.next;
        ListNode flag2;
        if(flag1.next == null) {
            return false;
        } else {
            flag2 = flag1.next.next;
        }
        
        
        
        while(flag1!=null && flag2!=null){
            if(flag1 == flag2) {
                return true;
            }
            if(flag2.next == null) {
                return false;
            } else {
                flag2 = flag2.next.next;
            }
            
            flag1 = flag1.next;
        }
        return false;
    }
}
