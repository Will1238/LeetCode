//执行用时: 148 ms, 在Number of Boomerangs的Java提交中击败了91.49% 的用户
class Solution {
    public int numberOfBoomerangs(int[][] points) {
        double[][] distant = new double[points.length][points.length];
        int ans = 0;;
        for (int i = 0; i < points.length; i++) {
            for (int j = i + 1; j < points.length; j++) {
                distant[i][j] = Math.sqrt((points[i][0] - points[j][0]) * (points[i][0] - points[j][0])
                    + (points[i][1] - points[j][1]) * (points[i][1] - points[j][1]));
                distant[j][i] = distant[i][j];
            }
        }
        for (int i = 0; i < distant.length; i++) {
            int count = 1;
            Arrays.sort(distant[i]);
            for (int j = 0; j < distant.length - 1; j++) {
                if (Math.abs(distant[i][j] - distant[i][j + 1]) < 1e-6) {
                    count++;
                } else {
                    ans += count * (count - 1);
                    count = 1;
                }
                
            }

            ans += count * (count - 1);
        }
        return ans;
    }
}
